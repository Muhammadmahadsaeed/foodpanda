{"version":3,"sources":["Images/loading.gif","logo.svg","Images/bg.jpg","config/firebase.js","screens/User View/Categories.js","redux-config/Chat/action.js","screens/Chat.js","Register Forms/AdminRegister.js","Register Forms/AdminNavbar.js","Register Forms/UserRegister.js","Register Forms/UserNavbar.js","screens/mainPage.js","screens/User View/navbar.js","screens/User View/DetailScreen.js","screens/User View/Resturant-view.js","screens/User View/AllRequest.js","screens/User View/UserRequestPage.js","screens/User View/RequestsTabs.js","screens/User View/UserDashboard.js","screens/footer.js","redux-config/action.js","screens/Resturant View/AllRequests.js","screens/Resturant View/navbar.js","screens/Resturant View/pending.js","screens/Resturant View/ResturantDashboard.js","Login/login.js","screens/Resturant View/AddCateogories.js","config/router.js","redux-config/reducer.js","redux-config/Chat/reducer.js","redux-config/store/index.js","redux-config/index.js","App.js","serviceWorker.js","index.js","Images/logo.png"],"names":["module","exports","__webpack_require__","p","checkAndCreatRoom","resturantId","Promise","resolve","reject","_users","currentUser","firebase","auth","uid","users","Object","defineProperty","firestore","collection","where","concat","get","then","snapshot","room","forEach","doc","data","id","createdAt","Date","now","lastMessage","add","res","getRoomInfo","obj","objectSpread","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","CheckableTag","Tag","tagsFromServer","HotTags","state","selectedTags","tag","checked","this","nextSelectedTags","toConsumableArray","filter","t","console","log","setState","_this2","react_default","a","createElement","style","marginRight","display","map","key","indexOf","onChange","handleChange","React","Component","CONSTANT","updateMessages","Chat","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","sendMessage","bind","assertThisInitialized","getMessages","match","params","_this$state","text","roomId","message","userId","sendMessageToDb","messages","className","input","placeholder","e","target","value","es_button","type","onClick","connect","chatReducer","dispatch","orderBy","onSnapshot","docs","push","Option","Select","AutoCompleteOption","AutoComplete","AdminRegistrationForm","confirmDirty","autoCompleteResult","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","createUserWithEmailAndPassword","email","password","user","set","history","catch","error","normFile","Array","isArray","fileList","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","domain","getFieldDecorator","tailFormItemLayout","wrapperCol","xs","span","offset","sm","initialValue","es_select","width","website","marginTop","es_form","assign","labelCol","onSubmit","Item","label","rules","required","whitespace","hasFeedback","validator","Password","onBlur","valuePropName","es_checkbox","href","htmlType","Admin","Form","create","name","AdminHeader","toggle","isOpen","Navbar","color","light","expand","NavbarBrand","src","logo","height","NavbarToggler","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","react_router_dom","to","AdminRegister","UserRegister_Option","UserRegister_AutoCompleteOption","User","UserNavbar","UserRegister","Header","login","modal","signOut","succ","_this3","NavItem","NavLink","cursor","userLoginData","DetailScreen","Card","Meta","move","changePrefixToSendRequest","fetchData","location","content","customerId","item","firebaseLoginData","resObj","resturant","customer","paddingTop","card","hoverable","cover","alt","list","dataSource","renderItem","title","resturantName","description","foods","foodItems","paddingLeft","backgroundColor","border","rate","mainReducer","ResturantView","handleInfiniteOnLoad","loading","length","warning","hasMore","result","search","resturantData","resid","items","substr","Search","Input","arr","Categories_HotTags","react_infinite_scroller_default","initialLoad","pageStart","loadMore","useWindow","avatar","charAt","toUpperCase","slice","float","detailScreen","ghost","spin","UserRequests","noTitleKey","requestData","itemLayout","size","footer","extra","TabPane","Tabs","UserRequestTabs","tabs","tab","UserRequestPage","UserDashboard","defaultActiveKey","tabPosition","UserDashboard_TabPane","Resturant_view","RequestsTabs","ResturantAllRequests","cus","prefix","update","Customer","ResturantNavbar","Pending","ResturantDashboard","activeTab","Resturant_View_navbar","classnames","active","TabContent","es_TabPane","tabId","Resturant_View_AllRequests","pending","Login","pwd","isLoading","userDashboard","signInWithEmailAndPassword","querySnapshot","saveLoginData","padding","row","col","icon","WrappedNormalLoginForm","payload","AddCategoriess","AddCateogories_Option","AddCateogories_AutoCompleteOption","AddCategories","Navigation","Fragment","react_router","exact","path","render","mainPage_Header","component","initState","arguments","undefined","action","removeUSer","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","App","es","integration_react","router","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.887faab5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.8b54e004.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg.a4425349.jpg\";","import firebase from 'firebase'\r\nimport { func } from 'prop-types';\r\nimport { resolve } from 'dns';\r\nimport { reject } from 'q';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCosVk-9R1i9duvfafFzuPLMs24LJfHEFk\",\r\n  authDomain: \"foodpanda-981c6.firebaseapp.com\",\r\n  databaseURL: \"https://foodpanda-981c6.firebaseio.com\",\r\n  projectId: \"foodpanda-981c6\",\r\n  storageBucket: \"foodpanda-981c6.appspot.com\",\r\n  messagingSenderId: \"1013776716113\",\r\n  appId: \"1:1013776716113:web:f767b38247637f96\"\r\n};\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  function checkAndCreatRoom(resturantId){\r\n    return new Promise((resolve,reject)=>{\r\n      const currentUser = firebase.auth().currentUser.uid\r\n      const users = {[resturantId] : true , [currentUser]:true}\r\n      firebase.firestore().collection('chatrooms').where(`users.${resturantId}`, \"==\",true).where(`users.${currentUser}`, \"==\",true)\r\n      .get().then((snapshot) => {\r\n        let room = {}\r\n  \r\n        snapshot.forEach((doc) => {\r\n          // console.log(\"rooms===========>\",doc.data())\r\n          room = doc.data()\r\n          // console.log(doc.id)\r\n          room.id = doc.id\r\n        })\r\n        if(!room.id){\r\n          room = {users,createdAt: Date.now(),lastMessage:{}}\r\n          firebase.firestore().collection('chatrooms').add(room)\r\n          .then(res=>{\r\n            room.id = res.id\r\n            resolve(room)\r\n          })\r\n  \r\n        }\r\n        else{\r\n          resolve(room)\r\n        }\r\n      })\r\n      \r\n      \r\n     \r\n    })\r\n    \r\n    // console.log(users)\r\n  }\r\n\r\n  function getRoomInfo(id){\r\n   return new Promise((resolve,reject) => {\r\n    firebase.firestore().collection('chatrooms').doc(id).get()\r\n    .then(res =>{\r\n      const obj = {id: res.id,...res.data()}\r\n      resolve(obj)\r\n   })\r\n  })\r\n  }\r\n\r\n  function sendMessageToDb(text,roomId){\r\n    const message = {text, createdAt: Date.now(),userId: firebase.auth().currentUser.uid}\r\n    return firebase.firestore().collection('chatrooms').doc(roomId).collection('messages').add(message)\r\n  }\r\n  export  {\r\n    firebaseConfig,\r\n    checkAndCreatRoom,\r\n    getRoomInfo,\r\n    sendMessageToDb\r\n  }\r\n","import React from 'react'\r\nimport { Tag } from 'antd';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst { CheckableTag } = Tag;\r\n\r\nconst tagsFromServer = ['BBQ', 'Chinese', 'Fast Food', 'Chips'];\r\n\r\nexport default class HotTags extends React.Component {\r\n  state = {\r\n    selectedTags: [],\r\n  };\r\n  // componentDidMount(){\r\n  //   this.fetchData()\r\n  // }\r\n  // fetchData () {\r\n\r\n  //   firebase.firestore().collection('resturant').get()\r\n  //   .then((snapshot) => {\r\n  //     let data = []\r\n  //     snapshot.forEach((resturantData) => {\r\n  //       const res = resturantData.data()\r\n  //       // console.log(\"agya==========>\",res)\r\n        \r\n  //       data.push({res })\r\n        \r\n  //     })\r\n  //     this.setState({selectedTags:data})\r\n  //   })\r\n  // };\r\n  handleChange(tag, checked) {\r\n    const { selectedTags } = this.state;\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    console.log('You are interested in: ', nextSelectedTags);\r\n    this.setState({ selectedTags: nextSelectedTags });\r\n  }\r\n\r\n  render() {\r\n    const { selectedTags } = this.state;\r\n    // console.log(\"nhi aya==========>\",{...selectedTags})\r\n    return (\r\n      <div>\r\n        <h6 style={{ marginRight: 8, display: 'inline' }}>Categories:</h6>\r\n        {tagsFromServer.map(tag => (\r\n          <CheckableTag\r\n            key={tag}\r\n            checked={selectedTags.indexOf(tag) > -1}\r\n            onChange={checked => this.handleChange(tag, checked)}\r\n          >\r\n            {tag}\r\n          </CheckableTag>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nconst CONSTANT = {\n    updateMessages: 'UPDATE_MESSAGE',\n    \n}\nconst getMessages = (roomId) =>{\n    return dispatch =>{\n        firebase.firestore().collection('chatrooms').doc(roomId).collection('messages').orderBy('createdAt')\n        .onSnapshot(docs =>{\n            const messages = []\n            docs.forEach((doc) =>{\n                const obj = {...doc,id: doc.id}\n                messages.push(obj)\n                console.log(\"chla\",messages)\n            })\n            dispatch({\n                type : CONSTANT,\n                data : messages\n            })\n        })\n    }\n}\nexport {\n    getMessages,\n    CONSTANT\n}","import { Input,Button} from 'antd';\r\nimport React from 'react'\r\nimport { ChatFeed, Message } from 'react-chat-ui'\r\nimport '../App.css'\r\nimport { connect } from 'react-redux'\r\nimport { getRoomInfo,sendMessageToDb} from '../config/firebase'\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {getMessages} from '../redux-config/Chat/action'\r\n\r\nclass Chat extends React.Component{\r\n    constructor(props){\r\n        super()\r\n        this.state = {\r\n          //   messages: [\r\n          //     new Message({\r\n          //       id: 1,\r\n          //       message: \"I'm the recipient! (The person you're talking to)\",\r\n          //     }), // Gray bubble\r\n          //     new Message({ id: 0, message: \"I'm you -- the blue bubble!\" }), // Blue bubble\r\n          //   ],\r\n          //   //...\r\n          room : {}\r\n          \r\n          };\r\n          this.sendMessage = this.sendMessage.bind(this)\r\n    }\r\n    componentDidMount(){\r\n      this.getRoomInfo()\r\n      this.props.getMessages(this.props.match.params.id)\r\n    }\r\n   async getRoomInfo(){\r\n      try{\r\n\r\n        const room = await getRoomInfo(this.props.match.params.id)\r\n        this.setState({room})\r\n      }catch(e){\r\n\r\n      }\r\n\r\n    }\r\n    sendMessage(){\r\n      const {text,room} = this.state\r\n      sendMessageToDb(text,room.id)\r\n    }\r\n    render() {\r\n        console.log(\"chatromm===>\",this.props.messages)\r\n\r\n        return (\r\n       <div className=\"container\">\r\n        <div className=\"App \">\r\n            \r\n        {/* <ChatFeed\r\n            messages={this.state.messages} // Boolean: list of message objects\r\n            isTyping={this.state.is_typing} // Boolean: is the recipient typing\r\n            hasInputField={false} // Boolean: use our input, or use your own\r\n            showSenderName // show the name of the user who sent the message\r\n            bubblesCentered={false} //Boolean should the bubbles be centered in the feed?\r\n            // JSON: Custom bubble styles\r\n            bubbleStyles={\r\n              {\r\n                text: {\r\n                  fontSize: 20\r\n                },\r\n                chatbubble: {\r\n                  borderRadius: 10,\r\n                  padding: 20\r\n                }\r\n              }\r\n            }\r\n          /> */}\r\n          <Input placeholder=\"Type message here.....\" onChange={(e)=> this.setState({text: e.target.value})} />\r\n          <Button type=\"primary\" onClick={this.sendMessage}>Send</Button>\r\n        </div>\r\n        \r\n       \r\n       </div>\r\n      \r\n        )\r\n       \r\n      }\r\n      \r\n}\r\n// Your code stuff...\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"bhai yr aja\",state.chatReducer.messages)\r\n\r\n  return {\r\n      // user: state.user\r\n      messages: state.chatReducer.messages,\r\n\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return {\r\n      // user: state.user\r\n      getMessages: (roomId) => dispatch(getMessages(roomId))\r\n\r\n  }\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Icon,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  Upload,\r\n  message,\r\n  AutoComplete,\r\n} from 'antd';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n// import \"firebase/storage\"\r\n\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst residences = [\r\n  {\r\n    value: 'zhejiang',\r\n    label: 'Zhejiang',\r\n    children: [\r\n      {\r\n        value: 'hangzhou',\r\n        label: 'Hangzhou',\r\n        children: [\r\n          {\r\n            value: 'xihu',\r\n            label: 'West Lake',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    value: 'jiangsu',\r\n    label: 'Jiangsu',\r\n    children: [\r\n      {\r\n        value: 'nanjing',\r\n        label: 'Nanjing',\r\n        children: [\r\n          {\r\n            value: 'zhonghuamen',\r\n            label: 'Zhong Hua Men',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n// function getBase64(img, callback) {\r\n//   const reader = new FileReader();\r\n//   reader.addEventListener('load', () => callback(reader.result));\r\n//   reader.readAsDataURL(img);\r\n// }\r\n\r\n// function beforeUpload(file) {\r\n//   const isJPG = file.type === 'image/png';\r\n//   if (!isJPG) {\r\n//       message.error('You can only upload JPG file!');\r\n//   }\r\n//   const isLt2M = file.size / 1024 / 1024 < 2;\r\n//   if (!isLt2M) {\r\n//       message.error('Image must smaller than 2MB!');\r\n//   }\r\n//   return isJPG && isLt2M;\r\n// }\r\nclass AdminRegistrationForm extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n        if (!err) {\r\n          let obj = {\r\n            error : '',\r\n            lastModifiedDate : '',\r\n            name : '',\r\n            originFileObj : ''\r\n          }\r\n          // values.upload.map((item)=>{\r\n          //   obj.error = item.error\r\n          //   obj.lastModifiedDate = item.lastModifiedDate\r\n          //   obj.name = item.name\r\n          //   obj.originFileObj = item.originFileObj\r\n          // })\r\n          // values.upload = obj\r\n          console.log(values)\r\n          firebase.auth().createUserWithEmailAndPassword(values.email, values.password)\r\n          .then((res)=>{\r\n          \r\n          //  var storageRef = firebase.storage().ref('/');\r\n          //  var imagesRef = storageRef.child(`Resturant Admin/${obj.name}`);\r\n   \r\n          //  imagesRef.put(values.upload)\r\n          //  .then((snapshot) => {\r\n          //    snapshot.ref.getDownloadURL()\r\n          //    .then((snap) => {  \r\n              firebase.firestore().collection('resturant').doc(res.user.uid)\r\n              .set({ ...values, type: 'restaurant' })\r\n              .then(() => {\r\n                  this.props.history.push('/Header')\r\n\r\n              })\r\n  //        })\r\n         .catch(function(error) {\r\n           console.error(\"Error adding document: \", error);\r\n          });\r\n            \r\n     })\r\n  //    .catch(function(error) {\r\n  //     console.error(\"Error adding document: \", error);\r\n       \r\n  //  });\r\n      \r\n  //      })\r\n  //      .catch(function(error) {\r\n  //       console.error(\"Error adding document: \", error);\r\n         \r\n  //    });\r\n    \r\n        }\r\n    });\r\n};\r\n// handleChangeimage = info => {\r\n//     if (info.file.status === 'uploading') {\r\n//         this.setState({ loading: true });\r\n//         return;\r\n//     }\r\n//     if (info.file.status === 'done') {\r\n//         // Get this url from response in real world.\r\n//         getBase64(info.file.originFileObj, imageUrl =>\r\n//             this.setState({\r\n//                 imageUrl,\r\n//                 loading: false,\r\n//             }),\r\n//             console.log(this.state.imageUrl)\r\n//         );\r\n//     }\r\n// };\r\n\r\n  normFile = e => {\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n\r\n\r\n  handleConfirmBlur = e => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  handleWebsiteChange = value => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n    }\r\n    this.setState({ autoCompleteResult });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props)\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { autoCompleteResult } = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 12 },\r\n        sm: { span: 8 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    const prefixSelector = getFieldDecorator('prefix', {\r\n      initialValue: '86',\r\n    })(\r\n      <Select style={{ width: 70 }}>\r\n        <Option value=\"86\">+86</Option>\r\n        <Option value=\"87\">+87</Option>\r\n      </Select>,\r\n    );\r\n\r\n    const websiteOptions = autoCompleteResult.map(website => (\r\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"container\" style={{marginTop:'2%'}}>\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n      <Form.Item\r\n          label={\r\n            <span>\r\n              Full Name\r\n            \r\n            </span>\r\n          }\r\n        >\r\n          {getFieldDecorator('nickname', {\r\n            rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={\r\n            <span>\r\n              Resturant Name\r\n            \r\n            </span>\r\n          }\r\n        >\r\n          {getFieldDecorator('resturantName', {\r\n            rules: [{ required: true, message: 'Please input your Resturant Name!', whitespace: true }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"E-mail\">\r\n          {getFieldDecorator('email', {\r\n            rules: [\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n            ],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Country\">\r\n       \r\n        \r\n          <Input />\r\n        \r\n        </Form.Item>\r\n        <Form.Item label=\"City\">\r\n       \r\n        \r\n          <Input />\r\n        \r\n        </Form.Item>\r\n        <Form.Item label=\"Password\" hasFeedback>\r\n          {getFieldDecorator('password', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n              {\r\n                validator: this.validateToNextPassword,\r\n              },\r\n            ],\r\n          })(<Input.Password />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Confirm Password\" hasFeedback>\r\n          {getFieldDecorator('confirm', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your password!',\r\n              },\r\n              {\r\n                validator: this.compareToFirstPassword,\r\n              },\r\n            ],\r\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n        </Form.Item>\r\n        {/* <Form.Item label=\"Upload\" extra=\"Your Pic\">\r\n          {getFieldDecorator('upload', {\r\n            valuePropName: 'fileList',\r\n            getValueFromEvent: this.normFile,\r\n          })(\r\n            <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\r\n              <Button>\r\n                <Icon type=\"upload\" /> Click to upload\r\n              </Button>\r\n            </Upload>,\r\n          )}\r\n        </Form.Item> */}\r\n        <Form.Item {...tailFormItemLayout}>\r\n          {getFieldDecorator('agreement', {\r\n            valuePropName: 'checked',\r\n          })(\r\n            <Checkbox>\r\n              I have read the <a href=\"\">agreement</a>\r\n            </Checkbox>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Admin = Form.create({ name: 'register' })(AdminRegistrationForm);\r\n\r\nexport default Admin","import React from 'react';\r\nimport logo from '../Images/logo.png'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport UserNavbar from './UserNavbar'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\nimport Header from '../screens/mainPage';\r\nimport Admin from './AdminRegister'\r\nexport default class AdminHeader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\"><img src={logo} style={{height:60,width:200}} /></NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              \r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  Registeration\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                  {/* <span onClick={()=> this.props.history.push('')}>User</span> */}\r\n                  <Link to=\"/UserNavbar\">User</Link>\r\n                    \r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <Link to=\"/Header\">Login</Link>\r\n                  </DropdownItem>\r\n                  \r\n                  \r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n\r\n        <Admin  {...this.props}/>\r\n      \r\n\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Icon,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  AutoComplete,\r\n} from 'antd';\r\n\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst residences = [\r\n  {\r\n    value: 'zhejiang',\r\n    label: 'Zhejiang',\r\n    children: [\r\n      {\r\n        value: 'hangzhou',\r\n        label: 'Hangzhou',\r\n        children: [\r\n          {\r\n            value: 'xihu',\r\n            label: 'West Lake',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    value: 'jiangsu',\r\n    label: 'Jiangsu',\r\n    children: [\r\n      {\r\n        value: 'nanjing',\r\n        label: 'Nanjing',\r\n        children: [\r\n          {\r\n            value: 'zhonghuamen',\r\n            label: 'Zhong Hua Men',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nclass AdminRegistrationForm extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n        if (!err) {\r\n            firebase.auth().createUserWithEmailAndPassword(values.email, values.password)\r\n                .then((res) => {\r\n                    firebase.firestore().collection('users').doc(res.user.uid)\r\n                        .set({ ...values, type: 'user' })\r\n                        this.props.history.push('/Header')\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  handleWebsiteChange = value => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n    }\r\n    this.setState({ autoCompleteResult });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { autoCompleteResult } = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span:12 },\r\n        sm: { span: 8 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    const prefixSelector = getFieldDecorator('prefix', {\r\n      initialValue: '86',\r\n    })(\r\n      <Select style={{ width: 70 }}>\r\n        <Option value=\"86\">+86</Option>\r\n        <Option value=\"87\">+87</Option>\r\n      </Select>,\r\n    );\r\n\r\n    const websiteOptions = autoCompleteResult.map(website => (\r\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"container\" style={{marginTop:'2%'}}>\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n      <Form.Item\r\n          label={\r\n            <span>\r\n              Full Name\r\n            \r\n            </span>\r\n          }\r\n        >\r\n          {getFieldDecorator('nickname', {\r\n            rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"E-mail\">\r\n          {getFieldDecorator('email', {\r\n            rules: [\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n            ],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Country\">\r\n       \r\n        \r\n          <Input />\r\n        \r\n        </Form.Item>\r\n        <Form.Item label=\"City\">\r\n       \r\n        \r\n          <Input />\r\n        \r\n        </Form.Item>\r\n        <Form.Item label=\"Age\">\r\n       \r\n        \r\n          <Input />\r\n        \r\n        </Form.Item>\r\n        <Form.Item label=\"Gender\">\r\n                        {getFieldDecorator('gender', {\r\n                            rules: [{ required: false, message: 'Please select your gender!' }],\r\n                        })(\r\n                            <Select\r\n                                placeholder=\"select you gender\"\r\n                            // onChange={this.handleSelectChange}\r\n                            >\r\n                                <Option value=\"male\">male</Option>\r\n                                <Option value=\"female\">female</Option>\r\n                            </Select>,\r\n                        )}\r\n                    </Form.Item>\r\n        <Form.Item label=\"Password\" hasFeedback>\r\n          {getFieldDecorator('password', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n              {\r\n                validator: this.validateToNextPassword,\r\n              },\r\n            ],\r\n          })(<Input.Password />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Confirm Password\" hasFeedback>\r\n          {getFieldDecorator('confirm', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your password!',\r\n              },\r\n              {\r\n                validator: this.compareToFirstPassword,\r\n              },\r\n            ],\r\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n        </Form.Item>\r\n        \r\n        <Form.Item {...tailFormItemLayout}>\r\n          {getFieldDecorator('agreement', {\r\n            valuePropName: 'checked',\r\n          })(\r\n            <Checkbox>\r\n              I have read the <a href=\"\">agreement</a>\r\n            </Checkbox>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst User = Form.create({ name: 'register' })(AdminRegistrationForm);\r\n\r\nexport default User","import React from 'react';\r\nimport logo from '../Images/logo.png'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Header from '../screens/mainPage'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\nimport AdminHeader from './AdminNavbar'\r\nimport User from './UserRegister'\r\n\r\nexport default class UserNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\"><img src={logo} style={{height:60,width:200}} /></NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              \r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  Registeration\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                  {/* <span onClick={()=> this.props.history.push('')}>User</span> */}\r\n                  <Link to=\"/Header\">Login</Link>\r\n                    \r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <Link to=\"/AdminHeader\">Resturant</Link>\r\n                  </DropdownItem>\r\n                  \r\n                  \r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n\r\n        <User  {...this.props}/>\r\n      \r\n\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport logo from '../Images/logo.png'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport UserNavbar from '../Register Forms/UserNavbar'\r\nimport AdminHeader from '../Register Forms/AdminNavbar'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\nimport WrappedNormalLoginForm from '../Login/login';\r\n\r\nexport default class Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{height:'100%',width:'100%'}}>\r\n\r\n\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\"><img src={logo} style={{height:60,width:200}} /></NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              \r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  Registeration\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                  {/* <span onClick={()=> this.props.history.push('')}>User</span> */}\r\n                  <Link to=\"/UserNavbar\">User</Link>\r\n                    \r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <Link to=\"/AdminHeader\">Resturant</Link>\r\n                  </DropdownItem>\r\n                  \r\n                  \r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n\r\n        <WrappedNormalLoginForm  {...this.props}/>\r\n      \r\n\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport logo from '../../Images/logo.png'\r\nimport { connect } from 'react-redux';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n// import {browserHistory} from 'react-router'\r\n\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\nimport Header from '../mainPage'\r\n\r\n class UserNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      modal: false\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n   \r\n    // this.toggleModal = this.toggleModal.bind(this);\r\n\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n \r\n\r\n  \r\n  signOut() {\r\n    console.log(\"signout janu\")\r\n    console.log(this.props)\r\n    firebase.auth().signOut()\r\n    .then((succ)=> {\r\n      this.props.history.push('/Header')\r\n    }).catch(function(error) {\r\n      // An error happened.\r\n    });\r\n  }\r\n  render() {\r\n    const { modal} = this.state\r\n    console.log(modal)\r\n    return (\r\n      <div>\r\n\r\n\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\"><img src={logo} style={{height:60,width:200}} /></NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n                <NavLink style={{cursor:'pointer'}}>Find Your Location</NavLink>\r\n            </NavItem>\r\n            {/* <NavItem  onClick={()=>this.signOut()}>\r\n              \r\n            </NavItem> */}\r\n            <NavItem style={{cursor:'pointer'}} onClick={()=>this.signOut()}>\r\n              <NavLink>Log Out</NavLink>\r\n            </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userLoginData: null,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(UserNavbar);\r\n","import React from 'react';\r\nimport { Card,Button,Rate, List } from 'antd';\r\nimport {  message, Avatar} from 'antd';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { connect } from 'react-redux'\r\nimport { checkAndCreatRoom} from '../../config/firebase'\r\nimport Chat from '../Chat'\r\nimport UserNavbar from './navbar';\r\n// import Item from 'antd/lib/list/Item';\r\nconst { Meta } = Card;\r\nclass DetailScreen extends React.Component{\r\n  constructor(props){\r\n    super()\r\n    this.state={\r\n      data : []\r\n    }\r\n    this.move = this.move.bind(this)\r\n    this.changePrefixToSendRequest = this.changePrefixToSendRequest.bind(this)\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.fetchData(this.props.location.state.id)\r\n    \r\n  }\r\n\r\n  fetchData (id) {\r\n    // console.log(\"resturant ki di\",id)\r\n    firebase.firestore().collection('resturant').doc(id).get()\r\n    .then((doc) => {\r\n      let data = []\r\n      // snapshot.forEach((resturantData) => {\r\n        const res = doc.data()\r\n        \r\n        data.push({content:res})\r\n\r\n        \r\n      // })\r\n      this.setState({data:data})\r\n    })\r\n  };\r\n  async move(){\r\n    const customerId = this.props.location.state.id\r\n    \r\n     const room = await checkAndCreatRoom(customerId)\r\n    //  console.log(\"room======>\",room)\r\n    // console.log(e.id)\r\n    this.props.history.push(`/Chat/${room.id}`)\r\n    \r\n    \r\n    }\r\n    changePrefixToSendRequest(item){\r\n      item.userId = this.props.userLoginData.firebaseLoginData.uid\r\n      const resObj = {\r\n        resturant: item,\r\n        customer:this.props.userLoginData.firebaseLoginData\r\n      }\r\n      console.log(\"props==========>\",resObj)\r\n      firebase.firestore().collection('resturant').doc(this.props.location.state.id)\r\n      .collection('requests').add(resObj)\r\n      firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid)\r\n      .collection('requests').add(resObj)\r\n      this.props.history.push('/UserDashboard')\r\n    }\r\nrender(){\r\n  // console.log(\"detail =========>\",this.props)\r\n  const {data} = this.state\r\n     return(\r\n<div>\r\n  <UserNavbar/>\r\n\r\n      <div className=\"container\" style={{paddingTop:'5%'}}>\r\n            <Card\r\n            hoverable\r\n            style={{ width: 240 }}\r\n            cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n          >\r\n            <List\r\n            dataSource={this.state.data}\r\n            renderItem={item => (\r\n              <List.Item key={item.id}>\r\n          \r\n                 \r\n                <List.Item.Meta key={item.id}\r\n                  title={<a href=\"#\">Resturant Name: {item.content.resturantName}</a>}\r\n                  \r\n                  description={item.content.foods.foodItems}\r\n                />  \r\n                <Button type=\"primary\" onClick={()=> this.changePrefixToSendRequest(item)}>Order Now</Button>\r\n\r\n           </List.Item>\r\n           \r\n            )}\r\n            \r\n          > \r\n            \r\n          </List>\r\n           \r\n          <div style={{paddingLeft:'12%',display:'inline-block'}}>\r\n                <Button type=\"primary\" onClick={this.move} style={{backgroundColor:'green',border:'green'}}>Chat</Button>\r\n\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <Rate />\r\n          </Card>\r\n          </div>\r\n            \r\n          </div>    \r\n          )\r\n    }\r\n        \r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n      // user: state.user\r\n      userLoginData: state.mainReducer.userLoginData,\r\n\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(DetailScreen)\r\n\r\n","import { List, message, Avatar, Spin,Button } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport React from 'react';\r\nimport { Input } from 'antd';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport HotTags from './Categories';\r\nimport DetailScreen from './DetailScreen'\r\n\r\n\r\nconst fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\r\n\r\nclass ResturantView extends React.Component {\r\n  constructor(props){\r\n    super()\r\n    this.state = {\r\n      data: [],\r\n      loading: false,\r\n      hasMore: true,\r\n      result : '',\r\n      text : ''\r\n    };\r\n    \r\n  this.search = this.search.bind(this)\r\n    \r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    this.fetchData()\r\n  }\r\n\r\n  fetchData () {\r\n   \r\n    firebase.firestore().collection('resturant').get()\r\n    .then((snapshot) => {\r\n      let data = []\r\n      snapshot.forEach((resturantData) => {\r\n        const res = resturantData.data()\r\n        \r\n        data.push({content:res })\r\n        // console.log(data)\r\n        \r\n      })\r\n      this.setState({data:data})\r\n    })\r\n    \r\n  };\r\n\r\n  handleInfiniteOnLoad = () => {\r\n    let { data } = this.state;\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    if (data.length > 5) {\r\n      message.warning('Infinite List loaded all');\r\n      this.setState({\r\n        hasMore: false,\r\n        loading: false,\r\n      });\r\n      return;\r\n    }\r\n    \r\n      data = data.concat(data);\r\n      this.setState({\r\n        data,\r\n        loading: false,\r\n      \r\n    });\r\n  };\r\ndetailScreen(e){\r\n  console.log(e)\r\n  this.props.history.push('/DetailScreen',{id:e.content.resid})\r\n}\r\nsearch(e){\r\n  console.log()\r\n  let text = e.target.value\r\n  // text = text.charAt(0).toUpperCase()+text.slice(1)\r\n  const {data} = this.state;\r\n  // console.log(data)\r\n  const result = data.filter((items)=>{\r\n    console.log(items.content.resturantName)\r\n      return items.content.resturantName.substr(0,text.length) === text\r\n                  \r\n  })\r\n  this.setState({result,text})\r\n  // console.log(result)\r\n}\r\nrender() {\r\n  console.log(\"resturant View===========>\",this.state.data)\r\n    const { Search } = Input;\r\n    const {data,result,text} = this.state\r\n    \r\n    // console.log(forces)\r\n    const arr = text.length ? result : data\r\n    return (\r\n      <div className=\"demo-infinite-container container\">\r\n         <br/>\r\n         <Search\r\n          placeholder=\"Type Resturant Name here......\"\r\n          onChange={this.search}\r\n          style={{ width: '100%'}}\r\n          />\r\n          <br/><br/>\r\n        <HotTags />\r\n        <br />\r\n        <InfiniteScroll\r\n          initialLoad={false}\r\n          pageStart={0}\r\n          loadMore={this.handleInfiniteOnLoad}\r\n          hasMore={!this.state.loading && this.state.hasMore}\r\n          useWindow={false}\r\n        >\r\n          <List\r\n            dataSource={arr}\r\n            renderItem={item => (\r\n              <List.Item key={item.id}>\r\n          \r\n                 \r\n                <List.Item.Meta key={item.id}\r\n                     \r\n                  avatar={\r\n                    <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                  }\r\n                  title={<a href=\"#\">{item.content.resturantName.charAt(0).toUpperCase()+item.content.resturantName.slice(1)}</a>}\r\n                  \r\n                  description={\r\n                          <Button style={{float:'right'}} onClick={()=>this.detailScreen(item)} type=\"primary\" ghost >\r\n                              {item.content.foods.foodItems}\r\n                          </Button>\r\n                  }\r\n                />\r\n                \r\n               \r\n\r\n           </List.Item>\r\n            )}\r\n          > \r\n            {this.state.loading && this.state.hasMore && (\r\n              <div className=\"demo-loading-container\">\r\n                <Spin />\r\n              </div>\r\n            )}\r\n          </List>\r\n        </InfiniteScroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ReactDOM.render(<InfiniteListExample />, mountNode);\r\nexport default ResturantView","import React from 'react';\r\nimport { Card } from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\nclass AllRequests extends React.Component{\r\n    render(){\r\n        return(\r\n            <Card\r\n            hoverable\r\n            style={{ width: 240 }}\r\n            cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n          >\r\n            <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\r\n          </Card>\r\n        )\r\n    }\r\n   \r\n}\r\n export default AllRequests","import React from 'react';\r\nimport { Card } from 'antd';\r\nimport AllRequests from './AllRequest'\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { Avatar,Button,Rate, List ,Icon} from 'antd';\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nclass UserRequests extends React.Component {\r\n  state = {\r\n    key: 'tab1',\r\n    noTitleKey: 'app',\r\n    data : []\r\n  };\r\n\r\n  // onTabChange = (key, type) => {\r\n  //   console.log(key, type);\r\n  //   this.setState({ [type]: key });\r\n  // };\r\n  componentDidMount() {\r\n    this.fetchData()\r\n    \r\n  }\r\n  fetchData(){\r\n    // console.log(this.props.userLoginData.firebaseLoginData.uid)\r\n    firebase.firestore().collection('users').doc(this.props.userLoginData.firebaseLoginData.uid)\r\n      .collection('requests').get()\r\n      .then((doc) => {\r\n        let data = []\r\n        doc.forEach((requestData) => {\r\n          const res = requestData.data()\r\n          console.log(\"customer============>\",res.resturant.content)\r\n          data.push(res.resturant.content)\r\n  \r\n          \r\n        })\r\n      this.setState({data})\r\n\r\n      })\r\n  }\r\n  changePrefixToSendRequest(e){\r\n    console.log(e)\r\n  }\r\n  render() {\r\n    console.log(\"requests=======>\",this.state.data)\r\n\r\n    return (\r\n      <div className=\"container\" style={{paddingTop:'5%'}}>\r\n        <Card\r\n            style={{ width: '100%' }}\r\n            \r\n          >\r\n<List\r\n    itemLayout=\"vertical\"\r\n    size=\"large\"\r\n    \r\n    dataSource={this.state.data}\r\n    footer={\r\n      <div>\r\n        <b>ant design</b> footer part\r\n      </div>\r\n    }\r\n    renderItem={item => (\r\n      <List.Item\r\n        key={item.id}\r\n        \r\n        extra={\r\n          <img\r\n            width={272}\r\n            alt=\"logo\"\r\n            src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n          />\r\n        }\r\n      >\r\n      <List.Item.Meta\r\n          avatar={<Avatar src={item.avatar} />}\r\n          title={<a href=\"#\">Resturant Name: {item.resturantName}</a>}\r\n          description={item.foods.foodItems}\r\n        />\r\n        {item.email}\r\n        <br/>\r\n        <br/>\r\n        \r\n        <Button type=\"primary\" id=\"${item.id}\" onClick={()=> this.changePrefixToSendRequest(this)}>Request</Button>\r\n        <div style={{paddingLeft:'5%',display:'inline-block'}}>\r\n            <Button type=\"primary\" onClick={this.move} style={{backgroundColor:'green',border:'green'}}>Chat</Button>\r\n\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        \r\n        <Rate />\r\n      </List.Item>\r\n    )}\r\n    />\r\n  </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserRequests","import { Tabs } from 'antd';\r\nimport React from 'react';\r\nimport UserRequests from './UserRequestPage';\r\nimport AllRequests from './AllRequest';\r\n\r\nconst { TabPane } = Tabs;\r\nclass UserRequestTabs extends React.Component{\r\n    constructor(props){\r\n        super()\r\n    }\r\n    render(){\r\n        return(\r\n<div className=\"card-container\" style={{marginTop:'3%'}}>\r\n    <Tabs type=\"card\" style={{marginTop:'5%'}}>\r\n      <TabPane tab=\"All Requests\" className=\"container\" key=\"1\">\r\n        <UserRequests {...this.props}/>\r\n      </TabPane>\r\n      <TabPane tab=\"Pending\" key=\"2\">\r\n      <UserRequests {...this.props}/>\r\n        \r\n      </TabPane>\r\n      <TabPane tab=\"In Progress\" key=\"3\">\r\n      <UserRequests {...this.props}/>\r\n    \r\n       \r\n      </TabPane>\r\n      <TabPane tab=\"Deliver\" key=\"4\">\r\n      <UserRequests {...this.props}/>\r\n      \r\n\r\n      </TabPane>\r\n    </Tabs>\r\n  </div>\r\n        )\r\n    }\r\n}\r\nexport default UserRequestTabs","import React from 'react';\r\nimport ResturantView from './Resturant-view'\r\nimport { connect } from 'react-redux'\r\nimport UserNavbar from './navbar';\r\n// import * as firebase from \"firebase/app\";\r\n// import \"firebase/auth\";\r\nimport UserRequestTabs from './RequestsTabs';\r\nimport FooterPage from '../footer'\r\nimport { Tabs, Select } from 'antd';\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass UserDashboard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <div>\r\n           <UserNavbar  {...this.props}/>\r\n     \r\n       \r\n        <Tabs defaultActiveKey=\"1\" tabPosition=\"left\" >\r\n\r\n                <TabPane tab=\"Restaurants\" key=\"1\" >\r\n                    <ResturantView {...this.props}/>\r\n                    \r\n                </TabPane>\r\n                <TabPane tab=\"My Requests\" key=\"2\">\r\n                    <UserRequestTabs {...this.props}/>\r\n                    \r\n                </TabPane>\r\n            </Tabs>\r\n            </div>\r\n            \r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n      // user: state.user\r\n      userLoginData: state.mainReducer.userLoginData,\r\n\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(UserDashboard)","import React from 'react';\r\nimport { Modal, Button } from 'antd';\r\n\r\nclass FooterPage extends React.Component {\r\n  state = {\r\n    modal1Visible: false,\r\n    modal2Visible: false,\r\n  };\r\n\r\n  setModal1Visible(modal1Visible) {\r\n    this.setState({ modal1Visible });\r\n  }\r\n\r\n  setModal2Visible(modal2Visible) {\r\n    this.setState({ modal2Visible });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        \r\n        \r\n        <Button type=\"primary\" onClick={() => this.setModal2Visible(true)}>\r\n          Vertically centered modal dialog\r\n        </Button>\r\n        <Modal\r\n          title=\"Vertically centered modal dialog\"\r\n          centered\r\n          visible={this.state.modal2Visible}\r\n          onOk={() => this.setModal2Visible(false)}\r\n          onCancel={() => this.setModal2Visible(false)}\r\n        >\r\n          <p>some contents...</p>\r\n          <p>some contents...</p>\r\n          <p>some contents...</p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FooterPage\r\n","function saveLoginData(data){\n    return dispatch => {\n        dispatch({\n            type:'SAVE_LOGIN_DATA',\n            payload:data\n        })\n    }\n}\nconst remove_user = () => {\n    return {\n        type: \"REMOVE_USER\"\n    }\n}\n\nexport {\n    saveLoginData,\n    remove_user\n}","import React from 'react';\r\nimport { Card } from 'antd';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { Avatar,Button,Rate, List ,Icon} from 'antd';\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nclass ResturantAllRequests extends React.Component {\r\n  state = {\r\n    data : []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData()\r\n    \r\n  }\r\n  fetchData(){\r\n      let data = []\r\n    let resturantData = []\r\n    let userId = []\r\n    const obj = {\r\n      res: '',\r\n      cus : ''\r\n    }\r\n    // console.log(this.props.userLoginData.firebaseLoginData.uid)\r\n    firebase.firestore().collection('resturant').doc(this.props.userLoginData.firebaseLoginData.uid)\r\n      .collection('requests').get()\r\n      .then((doc) => {\r\n        \r\n        doc.forEach((requestData) => {\r\n        obj.res = requestData.data().customer\r\n        obj.cus = requestData.data().resturant.content\r\n        data.push(obj)\r\n                \r\n        })\r\n      this.setState({data})\r\n      console.log(\"res==============>\",data)\r\n\r\n      })\r\n    //   let newItem = data.map((itm)=>{\r\n    //       return itm.content.userId\r\n    //   })\r\n    //   console.log(\"==============>res\",resturantData)\r\n    //   console.log(\"iddddddd=======>\",userId)\r\n    //   for(var i = 0; i < userId.length; i++){\r\n    //     firebase.firestore().collection('users').doc(userId[i]).get()\r\n    //     .then((doc)=>{\r\n    //         doc.forEach((userRequestData)=>{\r\n    //           data.push(userRequestData.data())\r\n    //         })\r\n    //         this.setState({data})\r\n    //     })\r\n    //   }\r\n      \r\n\r\n  }\r\nchangePrefixToSendRequest(item){\r\n      item.content.foods.prefix = \"progress\"\r\n      console.log(item.userId)\r\n        console.log(item)\r\n    //   firebase.firestore().collection('resturant').doc(firebase.auth().currentUser.uid)\r\n    //   .collection('requests').update(item)\r\n      firebase.firestore().collection('users').doc(item.userId).collection('requests').update(item)\r\n      .then((snapshot)=>{\r\n        snapshot.forEach((resturantData) => {\r\n          console.log('===============>',resturantData.data().Customer.content)\r\n      })\r\n    })\r\n\r\n\r\n}\r\n  render() {\r\n    // console.log(\"requests=======>\",this.state.data)\r\n\r\n    return (\r\n      <div className=\"container\" style={{paddingTop:'5%'}}>\r\n        <Card\r\n            style={{ width: '100%' }}\r\n          \r\n          >\r\n<List\r\n    itemLayout=\"vertical\"\r\n    size=\"large\"\r\n    \r\n    dataSource={this.state.data}\r\n    footer={\r\n      <div>\r\n        <b>ant design</b> footer part\r\n      </div>\r\n    }\r\n    renderItem={item => (\r\n      <List.Item\r\n        key={item.id}\r\n        extra={\r\n          <img\r\n            width={272}\r\n            alt=\"logo\"\r\n            src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n          />\r\n        }\r\n      >\r\n      <List.Item.Meta\r\n          avatar={<Avatar src={item.avatar} />}\r\n          title={<a href=\"#\">Customer Name: {item.cus.resturantName}</a>}\r\n          description={item.cus.foods.foodItems}\r\n        />\r\n        Ordered By: \r\n                {item.res.email}\r\n        <br/>\r\n        <br/>\r\n        \r\n        <Button type=\"primary\" onClick={()=> this.changePrefixToSendRequest(item)}>Approve</Button>\r\n        <div style={{paddingLeft:'5%',display:'inline-block'}}>\r\n            <Button type=\"primary\" onClick={this.move} style={{backgroundColor:'green',border:'green'}}>Chat</Button>\r\n\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        \r\n        <Rate />\r\n      </List.Item>\r\n    )}\r\n    />\r\n  </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResturantAllRequests","import { connect } from 'react-redux';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport React from 'react';\r\nimport logo from '../../Images/logo.png'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n   } from 'reactstrap';\r\nimport Header from '../mainPage'\r\n\r\nclass ResturantNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  \r\n  signOut() {\r\n    \r\n    firebase.auth().signOut()\r\n    .then((succ)=> {\r\n      this.props.history.push('/Header')\r\n      console.log(\"sign out\")\r\n      \r\n    }).catch(function(error) {\r\n      console.log(error)\r\n    });\r\n  }\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <div>\r\n\r\n\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"#\"><img src={logo} style={{height:60,width:200}} /></NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              \r\n            <NavItem>\r\n                <NavLink><Link to=\"/AddCategories\">Add Categories</Link></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink style={{cursor:'pointer'}} onClick={()=>this.signOut()}>Log Out</NavLink>\r\n            </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n\r\n        \r\n      \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userLoginData: null,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ResturantNavbar);","import React from 'react';\r\nimport { Card } from 'antd';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { Avatar,Button,Rate, List ,Icon} from 'antd';\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nclass Pending extends React.Component {\r\n  state = {\r\n    data : []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData()\r\n    \r\n  }\r\n  fetchData(){\r\n      let data = []\r\n    let resturantData = []\r\n    let userId = []\r\n    const obj = {\r\n      res: '',\r\n      cus : ''\r\n    }\r\n    // console.log(this.props.userLoginData.firebaseLoginData.uid)\r\n    firebase.firestore().collection('resturant').doc(this.props.userLoginData.firebaseLoginData.uid)\r\n      .collection('requests').get()\r\n      .then((doc) => {\r\n        \r\n        doc.forEach((requestData) => {\r\n        obj.res = requestData.data().customer\r\n        obj.cus = requestData.data().resturant.content\r\n        data.push(obj)\r\n                \r\n        })\r\n      this.setState({data})\r\n      console.log(\"res==============>\",data)\r\n\r\n      })\r\n    //   let newItem = data.map((itm)=>{\r\n    //       return itm.content.userId\r\n    //   })\r\n    //   console.log(\"==============>res\",resturantData)\r\n    //   console.log(\"iddddddd=======>\",userId)\r\n    //   for(var i = 0; i < userId.length; i++){\r\n    //     firebase.firestore().collection('users').doc(userId[i]).get()\r\n    //     .then((doc)=>{\r\n    //         doc.forEach((userRequestData)=>{\r\n    //           data.push(userRequestData.data())\r\n    //         })\r\n    //         this.setState({data})\r\n    //     })\r\n    //   }\r\n      \r\n\r\n  }\r\nchangePrefixToSendRequest(item){\r\n      item.content.foods.prefix = \"progress\"\r\n      console.log(item.userId)\r\n        console.log(item)\r\n    //   firebase.firestore().collection('resturant').doc(firebase.auth().currentUser.uid)\r\n    //   .collection('requests').update(item)\r\n      firebase.firestore().collection('users').doc(item.userId).collection('requests').update(item)\r\n      .then((snapshot)=>{\r\n        snapshot.forEach((resturantData) => {\r\n          console.log('===============>',resturantData.data().Customer.content)\r\n      })\r\n    })\r\n\r\n\r\n}\r\n  render() {\r\n    // console.log(\"requests=======>\",this.state.data)\r\n\r\n    return (\r\n      <div className=\"container\" style={{paddingTop:'5%'}}>\r\n        <Card\r\n            style={{ width: '100%' }}\r\n          \r\n          >\r\n<List\r\n    itemLayout=\"vertical\"\r\n    size=\"large\"\r\n    \r\n    dataSource={this.state.data}\r\n    footer={\r\n      <div>\r\n        <b>ant design</b> footer part\r\n      </div>\r\n    }\r\n    renderItem={item => (\r\n      <List.Item\r\n        key={item.id}\r\n        extra={\r\n          <img\r\n            width={272}\r\n            alt=\"logo\"\r\n            src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n          />\r\n        }\r\n      >\r\n      <List.Item.Meta\r\n          avatar={<Avatar src={item.avatar} />}\r\n          title={<a href=\"#\">Customer Name: {item.cus.resturantName}</a>}\r\n          description={item.cus.foods.foodItems}\r\n        />\r\n        Ordered By: \r\n                {item.res.email}\r\n        <br/>\r\n        <br/>\r\n        \r\n        <Button type=\"primary\" onClick={()=> this.changePrefixToSendRequest(item)}>Approve</Button>\r\n        <div style={{paddingLeft:'5%',display:'inline-block'}}>\r\n            <Button type=\"primary\" onClick={this.move} style={{backgroundColor:'green',border:'green'}}>Chat</Button>\r\n\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        \r\n        <Rate />\r\n      </List.Item>\r\n    )}\r\n    />\r\n  </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pending","import React from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n// import ResturantView from './Resturant-view'\r\nimport ResturantAllRequests  from './AllRequests';\r\nimport { connect } from 'react-redux'\r\nimport ResturantNavbar from './navbar';\r\nimport Pending from './pending'\r\nclass ResturantDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      activeTab: '1'\r\n    };\r\n  }\r\n\r\n  toggle(tab) {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.props.userLoginData)\r\n    return (\r\n      <div>\r\n        <ResturantNavbar {...this.props}/>\r\n        <div style={{paddingTop:'2%'}}>\r\n        <Nav tabs>\r\n        <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: this.state.activeTab === '1' })}\r\n              onClick={() => { this.toggle('1'); }}\r\n            >\r\n              All Requests\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: this.state.activeTab === '2' })}\r\n              onClick={() => { this.toggle('2'); }}\r\n            >\r\n              In Progress\r\n            </NavLink>\r\n          </NavItem>\r\n\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: this.state.activeTab === '3' })}\r\n              onClick={() => { this.toggle('3'); }}\r\n            >\r\n              Pending\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: this.state.activeTab === '4' })}\r\n              onClick={() => { this.toggle('4'); }}\r\n            >\r\n              Delivered\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent activeTab={this.state.activeTab}>\r\n          <TabPane tabId=\"1\">\r\n            {/* <Row>\r\n              <Col sm=\"12\">\r\n                <h4>Tab 1 Contents</h4>\r\n              </Col>\r\n            </Row> */}\r\n            <ResturantAllRequests {...this.props}/>\r\n          </TabPane>\r\n          <TabPane tabId=\"2\">\r\n            \r\n            <Pending {...this.props}/>\r\n          </TabPane>\r\n          <TabPane tabId=\"3\">\r\n            \r\n            {/* <UserRequests /> */}\r\n          </TabPane>\r\n        </TabContent>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n      // user: state.user\r\n      userLoginData: state.mainReducer.userLoginData,\r\n\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(ResturantDashboard)","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Icon, Input, Button, Checkbox,Row,Col } from 'antd';\r\nimport loading from '../Images/loading.gif'\r\nimport UserDashboard from '../screens/User View/UserDashboard'\r\nimport { connect } from 'react-redux'\r\nimport { saveLoginData } from '../redux-config/action'\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport ResturantDashboard from '../screens/Resturant View/ResturantDashboard'\r\nimport backgroundImage from '../Images/bg.jpg'\r\n\r\n\r\nclass Login extends React.Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        // console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n  constructor(props){\r\n    super()\r\n    this.state = {\r\n      email : null,\r\n      pwd : null,\r\n      isLoading : false\r\n    }\r\n    this.userDashboard =  this.userDashboard.bind(this)\r\n\r\n  }\r\n  userDashboard(){\r\n    let data = []\r\n    firebase.auth().signInWithEmailAndPassword(this.state.email,this.state.pwd)\r\n      .then((res) => {   \r\n        firebase.firestore().collection('users').where('email' ,\"==\" , res.user.email).get()\r\n        .then(function (querySnapshot) {\r\n          querySnapshot.forEach(function (doc) {\r\n              data.push(doc.data())\r\n\r\n\r\n          });\r\n          // console.log(' => ', data);\r\n\r\n      });       \r\n       this.props.saveLoginData({ firebaseLoginData: res.user, data })\r\n       this.props.history.push('/UserDashboard')\r\n\r\n    // console.log('this.props ==> ', this.props)\r\n\r\n      })\r\n       .catch((err) => {\r\n            console.log(\"erooorrr\",err)\r\n        })\r\n    firebase.auth().signInWithEmailAndPassword(this.state.email,this.state.pwd)\r\n      .then((res) => {   \r\n        firebase.firestore().collection('resturant').where('email' ,\"==\" , res.user.email).get()\r\n        .then(function (querySnapshot) {\r\n          querySnapshot.forEach(function (doc) {\r\n              // console.log(doc.id, ' => ', doc.data());\r\n              data.push(doc.data())\r\n\r\n          });\r\n\r\n      });\r\n          this.props.saveLoginData({ firebaseLoginData: res.user, data })\r\n\r\n          this.props.history.push('/ResturantDashboard')\r\n\r\n      })\r\n\r\n    \r\n  }\r\n  render() {\r\n    \r\n    \r\n    // console.log(\"login ka props\",this.props)\r\n    const { isLoading } =  this.state\r\n    return (\r\n      <div className=\"container\" style={{marginTop:'5%'}}>\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\" style={{padding:'10%'}}>\r\n        <Form.Item row>\r\n        {this.props.form.getFieldDecorator('email', {\r\n            rules: [\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n            ],\r\n          })(\r\n            <Col sm={10}>\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"Username\" onChange={(e)=>this.setState({email:e.target.value})}\r\n            /></Col>,\r\n          )}\r\n        </Form.Item >\r\n        <Form.Item row>\r\n          {this.props.form.getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'Please input your Password!' }],\r\n          })(\r\n            <Col sm={10}>\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\" onChange={(e)=>this.setState({pwd:e.target.value})}\r\n            /></Col>,\r\n          )}\r\n        </Form.Item>\r\n        {isLoading && <img src={loading} style={{height:'10%'}} />}\r\n        <Form.Item>\r\n         \r\n          <Button type=\"primary\" htmlType=\"submit\" onClick={this.userDashboard}  className=\"login-form-button\">\r\n            Log in\r\n          </Button>\r\n          \r\n        </Form.Item>\r\n      </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst matchStateToProps = (state) => {\r\n  return ({\r\n      userLoginData: state.mainReducer.userLoginData,\r\n  })\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n  return {\r\n      saveLoginData: (data) => {\r\n          dispatch(saveLoginData(data))\r\n      }\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(Login);\r\n\r\n    \r\nexport default connect(matchStateToProps, matchDispatchToProps)(WrappedNormalLoginForm)","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Icon,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  Upload,\r\n  message,\r\n  AutoComplete,\r\n} from 'antd';\r\nimport SweetAlert from 'sweetalert-react';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { connect } from 'react-redux'\r\nimport UserNavbar from '../User View/navbar'\r\n// import \"firebase/storage\"\r\n\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst residences = [\r\n  {\r\n    value: 'zhejiang',\r\n    label: 'Zhejiang',\r\n    children: [\r\n      {\r\n        value: 'hangzhou',\r\n        label: 'Hangzhou',\r\n        children: [\r\n          {\r\n            value: 'xihu',\r\n            label: 'West Lake',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    value: 'jiangsu',\r\n    label: 'Jiangsu',\r\n    children: [\r\n      {\r\n        value: 'nanjing',\r\n        label: 'Nanjing',\r\n        children: [\r\n          {\r\n            value: 'zhonghuamen',\r\n            label: 'Zhong Hua Men',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nclass AddCategoriess extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n        if (!err) {\r\n            console.log(this.props.userLoginData.firebaseLoginData.uid)\r\n                let array = []\r\n                // array.push()\r\n                // const obj = {[array]:true}\r\n                // console.log()\r\n                firebase.firestore().collection('resturant').doc(this.props.userLoginData.firebaseLoginData.uid)\r\n                .update({foods:{...values},resid:this.props.userLoginData.firebaseLoginData.uid})\r\n                                         \r\n                        .then(() => {\r\n                          this.props.history.push('/ResturantDashboard')\r\n                       \r\n                        })\r\n                        .catch((err) => {\r\n                          console.log(err)\r\n                      })\r\n               \r\n        }\r\n    });\r\n};\r\n// handleChangeimage = info => {\r\n//     if (info.file.status === 'uploading') {\r\n//         this.setState({ loading: true });\r\n//         return;\r\n//     }\r\n//     if (info.file.status === 'done') {\r\n//         // Get this url from response in real world.\r\n//         getBase64(info.file.originFileObj, imageUrl =>\r\n//             this.setState({\r\n//                 imageUrl,\r\n//                 loading: false,\r\n//             }),\r\n//             console.log(this.state.imageUrl)\r\n//         );\r\n//     }\r\n// };\r\n\r\n  normFile = e => {\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n\r\n\r\n  handleConfirmBlur = e => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  handleWebsiteChange = value => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n    }\r\n    this.setState({ autoCompleteResult });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props)\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { autoCompleteResult } = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    const prefixSelector = getFieldDecorator('prefix', {\r\n      initialValue: 'request',\r\n    })(\r\n      <Select style={{ width: 70 }}>\r\n        <Option value=\"request\">request</Option>\r\n        <Option value=\"progress\">progress</Option>\r\n        <Option value=\"deliver\">deliver</Option>\r\n      </Select>,\r\n    );\r\n\r\n    const websiteOptions = autoCompleteResult.map(website => (\r\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n    ));\r\n    // console.log(\"yh wla props==========>\",this.props.userLoginData)\r\n\r\n    return (\r\n      <div>\r\n      <UserNavbar />\r\n      \r\n      <div className=\"container\" style={{marginTop:'5%'}}>\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n      \r\n        <Form.Item\r\n          label={\r\n            <span>\r\n              Resturant Name\r\n            \r\n            </span>\r\n          }\r\n        >\r\n          {getFieldDecorator('foodName', {\r\n            rules: [{ required: true, message: 'Please input your Resturant Name!', whitespace: true }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={\r\n            <span>\r\n              Food Categories\r\n            \r\n            </span>\r\n          }\r\n        >\r\n          {getFieldDecorator('foodCategories', {\r\n            rules: [{ required: true, message: 'Please input Food Categories!', whitespace: true }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={\r\n            <span>\r\n              Food Items\r\n            \r\n            </span>\r\n          }\r\n        >\r\n          {getFieldDecorator('foodItems', {\r\n            rules: [{ required: true, message: 'Please input Food Items!', whitespace: true }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        {/* <Form.Item label=\"Upload\" extra=\"Your Pic\">\r\n          {getFieldDecorator('upload', {\r\n            valuePropName: 'fileList',\r\n            getValueFromEvent: this.normFile,\r\n          })(\r\n            <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\r\n              <Button>\r\n                <Icon type=\"upload\" /> Click to upload\r\n              </Button>\r\n            </Upload>,\r\n          )}\r\n        </Form.Item> */}\r\n        <Form.Item {...tailFormItemLayout}>\r\n          {getFieldDecorator('agreement', {\r\n            valuePropName: 'checked',\r\n          })(\r\n            <Checkbox>\r\n              I have read the <a href=\"\">agreement</a>\r\n            </Checkbox>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\" >\r\n            Add\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      \r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst AddCategories = Form.create({ name: 'register' })(AddCategoriess);\r\nconst mapStateToProps = state => {\r\n  return {\r\n      // user: state.user\r\n      userLoginData: state.mainReducer.userLoginData,\r\n\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(AddCategories)\r\n ","import React from 'react';\r\nimport WrappedNormalLoginForm from '../Login/login';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Header from '../screens/mainPage'\r\nimport UserDashboard from '../screens/User View/UserDashboard';\r\nimport UserNavbar from '../Register Forms/UserNavbar'\r\nimport AdminHeader from '../Register Forms/AdminNavbar'\r\nimport ResturantDashboard from '../screens/Resturant View/ResturantDashboard'\r\nimport Chat from '../screens/Chat';\r\nimport AddCategories from '../screens/Resturant View/AddCateogories'\r\nimport ResturantNavbar from '../screens/Resturant View/navbar';\r\nimport DetailScreen from '../screens/User View/DetailScreen'\r\n// BrowserRouter ko use krenge Router k tor p islye aisa kiya\r\n// nickname alias\r\n// agr do text ek jse hon to diff krne k lye alias use hota h\r\n// import {text } from 'react-Native'\r\n// import {text as NativeText} from 'react-Native'\r\n\r\n// import all components\r\nfunction Navigation() {\r\n    return (\r\n         <Router>\r\n            <>\r\n                <Route exact path=\"/\" render={(props) => <Header {...props}  />} />\r\n                {/* <Route exact path=\"/\" render={(props) => <WrappedNormalLoginForm {...props}  />} /> */}\r\n                <Route path=\"/UserDashboard\" component={UserDashboard} />\r\n                <Route path=\"/UserNavbar\" component={UserNavbar}/>\r\n                <Route path=\"/AdminHeader\" component={AdminHeader} />\r\n                <Route path=\"/WrappedNormalLoginForm\" component={WrappedNormalLoginForm}/>\r\n                {/* <Route path=\"/AdminHeader\" component={AdminHeader} /> */}\r\n                <Route path=\"/Header\" component={Header} />\r\n                <Route  path=\"/ResturantDashboard\" component={ResturantDashboard} />\r\n                <Route  path=\"/Chat/:id\" component={Chat} />\r\n                <Route path=\"/AddCategories\" component={AddCategories}/>\r\n                <Route path=\"/DetailScreen\" component={DetailScreen}/>\r\n\r\n\r\n                {/* <Route exact path=\"/profile\" component={Profile} />\r\n                <Route path=\"/profile/:username\" component={IndividualProfile} /> */}\r\n                {/* this.props.match.params.username */}\r\n            </>\r\n        </Router>  \r\n    );\r\n  }\r\n  \r\n\r\n  export default Navigation;\r\n//   import app.js\r\n  ","const initState = {\r\n    userLoginData: null,\r\n    \r\n}\r\n\r\nexport default (state=initState, action) => {\r\n    switch(action.type) {\r\n        case \"SAVE_LOGIN_DATA\":\r\n            return {\r\n                ...state,\r\n                userLoginData:action.payload\r\n            }\r\n            case \"REMOVE_USER\": {\r\n                return {...state, userLoginData: null}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {CONSTANT} from './action'\r\n// import reducer from '../reducer';\r\nconst initState = {\r\n    messages: [],\r\n    \r\n}\r\n\r\n const chatReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case CONSTANT.updateMessages:{\r\n            return {\r\n                ...state,\r\n                messages:action.data\r\n            }\r\n        }\r\n            \r\n            case CONSTANT.removeUSer: {\r\n                return {...state, userLoginData: null}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default chatReducer","import { combineReducers } from 'redux';\r\nimport reducer from '../reducer';\r\nimport chatReducer from '../Chat/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    mainReducer:reducer,\r\n    chatReducer:chatReducer\r\n    \r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nimport rootReducer from './store/index';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nconst store = createStore(persistedReducer, applyMiddleware(thunk))\r\nconst persistor = persistStore(store)\r\n\r\n export {\r\n    store, \r\n    persistor\r\n} ","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport firebaseConfig from './config/firebase'\nimport Navigation from './config/router';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Example from './screens/mainPage'\nimport UserDashboard from './screens/User View/UserDashboard';\nimport User from './Register Forms/UserRegister'\nimport Admin from './Register Forms/AdminRegister'\nimport ResturantDashboard from './screens/Resturant View/ResturantDashboard';\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor } from \"./redux-config/index\"\n\n// import { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\n\nclass App extends React.Component {\n\n  // constructor(props){\n  //   super()\n\n  // }\n\n\n\n  render() {\n\n    return (\n\n      <div>\n            <Provider store={store}>\n                <PersistGate loading={null} persistor={persistor}>\n                    <Navigation />\n                </PersistGate>\n            </Provider>\n        \n\n       \n\n      </div>\n\n\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\n// import store from './redux-config/store/index';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor } from \"./redux-config/index\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst AppWrapper = () => {\n    return (\n        <div>\n            <Provider store={store}>\n                <PersistGate loading={null} persistor={persistor}>\n                    <App />\n                </PersistGate>\n            </Provider>\n        </div>\n    )\n}\n\nReactDOM.render(<AppWrapper />, document.getElementById('root'));\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.d3530b28.png\";"],"sourceRoot":""}